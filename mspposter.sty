%% mspposter.sty
%% Copyright 2016 Alexander Hewer
%
% This work may be distributed and/or modified under the
% conditions of the LaTeX Project Public License, either version 1.3
% of this license or (at your option) any later version.
% The latest version of this license is in
%   http://www.latex-project.org/lppl.txt
% and version 1.3 or later is part of all distributions of LaTeX
% version 2005/12/01 or later.
%
% This work has the LPPL maintenance status `maintained'.
%
% The Current Maintainer of this work is Alexander Hewer, email: hewer@coli.uni-saarland.de
%
% This work consists of the file mspposter.sty

\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{mspposter}

\RequirePackage{ifthen}
\RequirePackage{tikz}
\RequirePackage[pass]{geometry}

\usetikzlibrary{
  calc,
  backgrounds,
  positioning,
  decorations.pathmorphing,
  shadows
}

\usepgfmodule{oo}

%\url{http://tex.stackexchange.com/q/33703/86}
\makeatletter
\newcommand{\gettikzxy}[3]{%
  \tikz@scan@one@point\pgfutil@firstofone#1\relax
  \edef#2{\the\pgf@x}%
  \edef#3{\the\pgf@y}%
}
\makeatother

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% class for poster
\pgfooclass{poster}{

  \method poster() {
    % setup coordinates for background shading
    \coordinate (bgleft) at (-.5\paperwidth,0);
    \coordinate (bgright) at (0.5\paperwidth,0);
    \coordinate (bgbottom) at (0,-.5\paperheight);
    \coordinate (bgupper) at (0,.5\paperheight);
  }

  % ATTRIBUTES

  \attribute columnWidth=20;
  \attribute topMargin=20;
  \attribute blockHorizontalSpacing=20;
  \attribute blockVerticalSpacing=20;
  \attribute columnAmount=1;
  \attribute currentColumn=1;
  \attribute blockPadding=10;
  \attribute placementMode=rowFirst;
  \attribute currentID=1;

  % METHODS

  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  \method incrementID() {
    \pgfmathparse{int(\pgfoovalueof{currentID} + 1)}
    \pgfoolet{currentID}{\pgfmathresult}
  }

  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  \method setPlacementMode(#1) {
    \pgfooset{placementMode}{#1}
  }

  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  \method openBlock(#1) {
    \pgfooget{columnWidth}{\currentWidth}
    \pgfooget{blockPadding}{\currentPadding}
    \pgfooget{currentID}{\currentID}
    \node [
      #1,
      inner sep=\currentPadding pt,
      anchor=north west] at (blockanchor) (\currentID)
    \bgroup
  }

  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  \method openBlockW(#1){
    % this is a block with custom width -> do not count it as a usual column
    \pgfmathparse{int(\pgfoovalueof{currentColumn} - 1)}
    \pgfoolet{currentColumn}{\pgfmathresult}
    \pgfooget{blockPadding}{\currentPadding}
    \pgfooget{currentID}{\currentID}
    \node [
      #1,
      inner sep=\currentPadding pt,
      anchor=north west] at (blockanchor) (\currentID)
    \bgroup
  }

  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  \method openBlockWFill(#1){
    % indicate that this is the last column on the row
    \pgfooset{currentColumn}{\pgfoovalueof{columnAmount}}
    % compute remaining space to right boundary
    \gettikzxy{(blockanchor)}{\vx}{\vy}
    \pgfmathparse{veclen(0.5 * \textwidth - \vx, 0) - 2 * \pgfoovalueof{blockPadding}}
    \let\currentWidth\pgfmathresult
    \pgfooget{blockPadding}{\currentPadding}
    \pgfooget{currentID}{\currentID}
    \node [
      #1,
      inner sep=\currentPadding pt,
      anchor=north west] at (blockanchor) (\currentID)
    \bgroup
  }

  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  \method closeBlock(){
    \egroup;
    \pgfooget{currentID}{\currentID}
    % keep track of largest y value
    \path let
    \p1 = (largesty),
    \p2 = (\currentID.south)
    in \ifdim \y2 < \y1 coordinate (largesty) at (\x1, \y2)\fi;
    % update internal state depending on chosen placement mode
    \ifthenelse{\equal{\pgfoovalueof{placementMode}}{rowFirst}}{%
      \pgfoothis.updateStateRow()
    }{%
      % else
      \pgfoothis.updateStateColumn()
    }
    \pgfoothis.incrementID()
  }

  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  \method updateStateRow() {
    % check if we are at the last column
    \ifthenelse{%
      \equal{\pgfoovalueof{columnAmount}}{\pgfoovalueof{currentColumn}}}{%
      % yes, move to next row
      \pgfoothis.nextRow()%
    }{%
      % no, increment column number and move to next column
      \path let
      \p1 = (\currentID.north east)
      in coordinate (blockanchor) at (\x1 + \pgfoovalueof{blockHorizontalSpacing}pt, \y1);
      \pgfmathparse{int(\pgfoovalueof{currentColumn} + 1)}
      \pgfoolet{currentColumn}{\pgfmathresult}
    }%
  }

  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  \method updateStateColumn() {
    % move to next row
    \path let
    \p1 = (\currentID.south west)
    in coordinate (blockanchor) at (\x1, \y1 - \pgfoovalueof{blockVerticalSpacing}pt);
  }


  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  \method nextRow(){
    % move base anchor to next row
    \coordinate (baseanchor) at (largesty -| baseanchor);
    % initialize block anchor to first column
    \coordinate
        [below=\pgfoovalueof{blockVerticalSpacing}pt of baseanchor] (blockanchor);
        % return to first column
        \pgfooset{currentColumn}{1}
  }

  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  \method nextColumn(){
    % increment currentColumn
    \pgfmathparse{int(\pgfoovalueof{currentColumn} + 1)}
    \pgfoolet{currentColumn}{\pgfmathresult}
    % compute x-offset to base anchor
    \pgfmathparse{
      (\pgfoovalueof{currentColumn} - 1) * (
      \pgfoovalueof{columnWidth} + \pgfoovalueof{blockHorizontalSpacing} +
      2 * \pgfoovalueof{blockPadding}
      )
    }
    % set block anchor for column
    \path let
    \p1 = (baseanchor)
    in coordinate (blockanchor) at
    (\x1 + \pgfmathresult pt, \y1 - \pgfoovalueof{blockVerticalSpacing});
  }

  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  \method computeColumnWidth() {
    % derive the column width by using the amount of columns, textwidth,
    % block padding, and the block spacing
    \pgfmathparse{ (
      \textwidth
      - 2 * \pgfoovalueof{columnAmount} * \pgfoovalueof{blockPadding}
      - ( \pgfoovalueof{columnAmount} - 1) * \pgfoovalueof{blockHorizontalSpacing}
      ) / \pgfoovalueof{columnAmount}
    }
    \pgfoolet{columnWidth}{\pgfmathresult}
  }

  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  % initializes data structures for current poster block container
  \method initRows(#1,#2){
    \pgfooset{placementMode}{#2}
    \pgfoothis.setColumns(#1)
    \coordinate
        [below=\pgfoovalueof{blockVerticalSpacing}pt of baseanchor] (blockanchor);
  }

  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  \method setBlockPadding(#1) {
    \pgfooset{blockPadding}{#1}
    \pgfoothis.updateLayout()
  }

  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  \method setBlockSpacings(#1,#2) {
    \pgfooset{blockHorizontalSpacing}{#1}
    \pgfooset{blockVerticalSpacing}{#2}
    \pgfoothis.updateLayout()
  }

  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  % set amount of columns
  \method setColumns(#1) {
    % set column amount
    \pgfooset{columnAmount}{#1}
    % return to first column after change
    \pgfooset{currentColumn}{1}
    % compute column width
    \pgfoothis.computeColumnWidth()%
  }

  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  \method setMargins(#1,#2) {
    % modify text width such that poster is centered
    \pgfmathparse{\paperwidth - 2 * #1}
    \setlength{\textwidth}{\pgfmathresult pt}
    \pgfooset{topMargin}{#2}
    \pgfoothis.updateLayout()
  }

  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  \method updateLayout() {
    \pgfoothis.computeColumnWidth()
    \pgfoothis.setupAnchors()
  }

  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  \method setupAnchors() {
    % initialize the anchors
    % compute y-coordinate for all anchors,
    % add blockVerticalSpacing to each y-coordinate, it is removed by the first block
    \pgfmathparse{
      0.5\paperheight + \pgfoovalueof{blockVerticalSpacing} - \pgfoovalueof{topMargin}}
    % anchor for keeping track of largest y-value
    \coordinate (largesty) at (0, \pgfmathresult pt);
    % base anchor that is used to derive the actual anchors for
    % the poster blocks
    \coordinate (baseanchor) at (-0.5 * \textwidth, \pgfmathresult pt);
    % initialize first block anchor
    \coordinate
        [below=\pgfoovalueof{blockVerticalSpacing}pt of baseanchor] (blockanchor);
  }

  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  \method shadeBackground(#1,#2) {
    \begin{scope}[on background layer]
      \shade [bottom color=#1,top color=#2]
      (bgupper -|  bgleft) rectangle (bgbottom -| bgright);
    \end{scope}
  }

  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

}% end poster class

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\newcommand{\setblockpadding}[1] {
  \poster.setBlockPadding(#1)
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\newcommand{\setblockspacing}[1] {
  \poster.setBlockSpacings(#1,#1)
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\newcommand{\setblockspacings}[2] {
  \poster.setBlockSpacings(#1,#2)
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\newcommand{\setmargins}[2] {
  \poster.setMargins(#1,#2)
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\newcommand{\shadebackground}[2] {
  \poster.shadeBackground(#1,#2)
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\newcommand{\setbackground}[1] {
  \begin{scope}[on background layer]
    \node[inner sep=0] at (0, 0) {#1};
  \end{scope}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% row first container
\newenvironment{posterrows}[1][1]{
  \poster.initRows(#1,rowFirst)
  \poster.setColumns(#1)
}{
  \poster.nextRow()
  \poster.setColumns(1)
  \poster.setPlacementMode(rowFirst)
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% column first container
\newenvironment{postercolumns}[1][1]{
  \poster.initRows(#1,columnFirst)
  \poster.setColumns(#1)
}{
  \poster.nextRow()
  \poster.setColumns(1)
  \poster.setPlacementMode(rowFirst)
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\newenvironment{posterblock}[1][posterblock]{
  \poster.openBlock(#1)%
  % ignore leading white space
  \ignorespaces
  % place content inside a minipage
  \begin{minipage}{\currentWidth pt}%
}{%
  \end{minipage}%
  \poster.closeBlock()
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\newenvironment{posterblockW}[3][posterblock]{
  % open row block with custom width
  \poster.openBlockW(#1)%
  % ignore leading white space
  \ignorespaces
  % place content inside a minipage with specified height and width
  \begin{minipage}[c][#3pt][t]{#2 pt}%
}{%
  \end{minipage}%
  \poster.closeBlock()
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\newenvironment{posterblockWFill}[2][posterblock]{
  % open row block and use the remaining horizontal space as width
  \poster.openBlockWFill(#1)%
  % ignore leading white space
  \ignorespaces
  % place content inside a minipage with specified height and current text
  % width
  \begin{minipage}[c][#2pt][t]{\currentWidth pt}%
}{%
  \end{minipage}%
  \poster.closeBlock()
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\newenvironment{posterblockH}[2][posterblock]{
  \poster.openBlock(#1)%
  % ignore leading white space
  \ignorespaces
  % place content inside a minipage with specified height and current text
  % width
  \begin{minipage}[c][#2pt][t]{\currentWidth pt}%
}{%
  \end{minipage}%
  \poster.closeBlock()
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\newcommand{\posternextcolumn}{
  \poster.nextColumn()
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\newenvironment{logobar}[1][logobar]{
  \begin{scope}[on background layer]
    \coordinate (logobar) at (0, -0.5\paperheight);
    % shift a little bit, such that the bottom border is not visible
    \node [#1, above=-4pt of logobar] \bgroup
    % ignore leading white space
    \ignorespaces
    % place content inside a minipage
    \begin{minipage}{\textwidth}%
}{%
    \end{minipage}%
    \egroup;
  \end{scope}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% main environment
\newenvironment{poster}[1][themes/default]{%
  % remove all margins
  \newgeometry{hmargin=0pt, vmargin=0pt, bindingoffset=0pt}
  \parindent0pt
  % fill the whole page
  \begin{tikzpicture}
    \node[fill=white,
      anchor=north west,
      minimum width=\paperwidth,
      minimum height=\paperheight] {};
  \end{tikzpicture}%
  % open the actual tikz picture environment for the poster
  \begin{tikzpicture}[overlay,
      % shift origin of coordinate system
      shift={(-0.5\paperwidth,0.5\paperheight)},
      every node/.style={
        outer sep=0
    }]
    % create poster object
    \pgfoonew \poster=new poster()
    \input{#1}
}{%
  \end{tikzpicture}%
  % restore old layout
  % http://tex.stackexchange.com/questions/136089/change-page-margin-inside-own-environment
  \restoregeometry\aftergroup\restoregeometry
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% special environment for shifting the poster
% arg1: theme
% arg2: right shift
% arg3: down shift
\newenvironment{shiftedposter}[3][themes/default]{%
  % remove all margins
  \newgeometry{hmargin=0pt, vmargin=0pt, bindingoffset=0pt}
  \parindent0pt
  % fill the whole page
  \begin{tikzpicture}
    \node[fill=white,
      anchor=north west,
      minimum width=\paperwidth,
      minimum height=\paperheight] {};
  \end{tikzpicture}%
  % open the actual tikz picture environment for the poster
  \begin{tikzpicture}[overlay,
      % shift origin of coordinate system
      shift={(-0.5\paperwidth + #2,0.5\paperheight - #3)},
      every node/.style={
        outer sep=0
    }]
    % create poster object
    \pgfoonew \poster=new poster()
    \input{#1}
}{%
  \end{tikzpicture}%
  % restore old layout
  % http://tex.stackexchange.com/questions/136089/change-page-margin-inside-own-environment
  \restoregeometry\aftergroup\restoregeometry
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
